[{"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js":"1","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js":"2","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js":"3","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx":"4","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx":"5","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js":"6","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js":"7","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js":"9","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js":"10","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js":"11","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js":"12","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js":"13","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js":"14","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js":"15","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js":"16","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js":"17","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js":"18"},{"size":595,"mtime":1611009851880,"results":"19","hashOfConfig":"20"},{"size":5086,"mtime":1610734296686,"results":"21","hashOfConfig":"20"},{"size":2213,"mtime":1611181670879,"results":"22","hashOfConfig":"20"},{"size":4025,"mtime":1611020600668,"results":"23","hashOfConfig":"20"},{"size":2518,"mtime":1611033969299,"results":"24","hashOfConfig":"20"},{"size":312,"mtime":1610734296683,"results":"25","hashOfConfig":"20"},{"size":1227,"mtime":1611029613161,"results":"26","hashOfConfig":"20"},{"size":132,"mtime":1610734296683,"results":"27","hashOfConfig":"20"},{"size":903,"mtime":1611028474591,"results":"28","hashOfConfig":"20"},{"size":164,"mtime":1611096103368,"results":"29","hashOfConfig":"20"},{"size":258,"mtime":1611096278517,"results":"30","hashOfConfig":"20"},{"size":774,"mtime":1611115554737,"results":"31","hashOfConfig":"20"},{"size":184,"mtime":1611096226584,"results":"32","hashOfConfig":"20"},{"size":677,"mtime":1611184699121,"results":"33","hashOfConfig":"20"},{"size":509,"mtime":1611181722376,"results":"34","hashOfConfig":"20"},{"size":568,"mtime":1611181774255,"results":"35","hashOfConfig":"20"},{"size":180,"mtime":1611096121383,"results":"36","hashOfConfig":"20"},{"size":868,"mtime":1611174283457,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1tr13u0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js",[],["80","81"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx",["82","83","84","85","86"],"import React, { useState, useRef, useEffect } from \"react\";\nimport \"./SignupPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useForm } from \"../../hooks/useForm\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // Photos have to be sent over using FormData,\n    // they are sent over to the server in multiple requests\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n\n    for (let fieldName in state) {\n      console.log(fieldName, state[fieldName]);\n      // append the rest of the data to the form obejct\n      formData.append(fieldName, state[fieldName]);\n    }\n\n    try {\n      console.log(formData.forEach((item) => console.log(item)));\n\n      // use the userService to make the fetch request\n      await userService.signup(formData);\n\n      // Route to wherever you want!\n      // after you get a response from the server from\n      // the signup request, you need to grab the token from\n      // local storage and set the user!\n      props.handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \"this is e.target.files\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  //key should be password\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            Sign Up\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n              <Form.Field>\n                <span style={{ textAlign: \"left\" }}>\n                  Upload a profile Picture\n                </span>\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileInput}\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" disabled={invalidForm}>\n                Signup\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx",["87","88"],"import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      console.log(state, \"this is state\");\n      console.log(props, \"this is props\");\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignupOrLogin(); //\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <span>Log-in to your account</span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n                disabled={invalidForm}\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js",["89"],"import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\n\n//if you upload a photo, make sure that you delete the headers\n//because you have to send multipart form request\nfunction signup(user) {\n  return (\n    fetch(BASE_URL + \"signup\", {\n      method: \"POST\",\n      body: user,\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        // Probably a duplicate email\n        throw new Error(\"Email already taken!\");\n      })\n      // Parameter destructuring!\n      .then(({ token }) => tokenService.setToken(token))\n  );\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js",["90"],"function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js",["91","92","93"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js",["94"],"const BASE_URL = \"https://api.rawg.io/api/\";\n\n//getting the date\nconst getCurrentMonth = () => {\n  const month = new Date().getMonth() + 1;\n  if (month < 10) {\n    return `0${month}`;\n  } else {\n    return month;\n  }\n};\n\nconst getCurrentDay = () => {\n  const day = new Date().getDate();\n  if (day < 10) {\n    return `0${day}`;\n  } else {\n    return day;\n  }\n};\n\nconst currentYear = new Date().getFullYear();\nconst currentMonth = getCurrentMonth();\nconst currentDay = getCurrentDay();\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\n//popular games\n\nconst POPULAR_GAMES = `games?dates${lastYear},${currentDate}&ordering=-rating&page_size=9`;\n\nexport const popularGamesURL = () => `${BASE_URL}${POPULAR_GAMES}`;\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":33},{"ruleId":"99","severity":1,"message":"103","line":1,"column":35,"nodeType":"101","messageId":"102","endLine":1,"endColumn":44},{"ruleId":"99","severity":1,"message":"104","line":4,"column":38,"nodeType":"101","messageId":"102","endLine":4,"endColumn":43},{"ruleId":"99","severity":1,"message":"105","line":5,"column":10,"nodeType":"101","messageId":"102","endLine":5,"endColumn":17},{"ruleId":"99","severity":1,"message":"106","line":10,"column":23,"nodeType":"101","messageId":"102","endLine":10,"endColumn":35},{"ruleId":"99","severity":1,"message":"104","line":11,"column":3,"nodeType":"101","messageId":"102","endLine":11,"endColumn":8},{"ruleId":"99","severity":1,"message":"106","line":17,"column":23,"nodeType":"101","messageId":"102","endLine":17,"endColumn":35},{"ruleId":"107","severity":1,"message":"108","line":47,"column":1,"nodeType":"109","endLine":52,"endColumn":3},{"ruleId":"107","severity":1,"message":"108","line":34,"column":1,"nodeType":"109","endLine":39,"endColumn":3},{"ruleId":"99","severity":1,"message":"110","line":2,"column":8,"nodeType":"101","messageId":"102","endLine":2,"endColumn":18},{"ruleId":"99","severity":1,"message":"111","line":5,"column":9,"nodeType":"101","messageId":"102","endLine":5,"endColumn":16},{"ruleId":"99","severity":1,"message":"112","line":7,"column":9,"nodeType":"101","messageId":"102","endLine":7,"endColumn":19},{"ruleId":"99","severity":1,"message":"113","line":26,"column":7,"nodeType":"101","messageId":"102","endLine":26,"endColumn":15},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Image' is defined but never used.","'useForm' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'DetailCard' is defined but never used.","'popular' is assigned a value but never used.","'gameImages' is assigned a value but never used.","'nextYear' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]