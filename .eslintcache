[{"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js":"1","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js":"2","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js":"3","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx":"4","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx":"5","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js":"6","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js":"7","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js":"9","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js":"10","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js":"11","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js":"12","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js":"13","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js":"14","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js":"15","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js":"16","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js":"17","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js":"18","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SimpleSlider/SimpleSlider.js":"19"},{"size":595,"mtime":1611009851880,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1610734296686,"results":"22","hashOfConfig":"21"},{"size":4460,"mtime":1611471394302,"results":"23","hashOfConfig":"21"},{"size":4025,"mtime":1611020600668,"results":"24","hashOfConfig":"21"},{"size":2518,"mtime":1611033969299,"results":"25","hashOfConfig":"21"},{"size":312,"mtime":1610734296683,"results":"26","hashOfConfig":"21"},{"size":1227,"mtime":1611029613161,"results":"27","hashOfConfig":"21"},{"size":132,"mtime":1610734296683,"results":"28","hashOfConfig":"21"},{"size":903,"mtime":1611028474591,"results":"29","hashOfConfig":"21"},{"size":436,"mtime":1611447983249,"results":"30","hashOfConfig":"21"},{"size":690,"mtime":1611448018417,"results":"31","hashOfConfig":"21"},{"size":892,"mtime":1611266953920,"results":"32","hashOfConfig":"21"},{"size":242,"mtime":1611447420568,"results":"33","hashOfConfig":"21"},{"size":627,"mtime":1611476278964,"results":"34","hashOfConfig":"21"},{"size":1406,"mtime":1611473161369,"results":"35","hashOfConfig":"21"},{"size":3516,"mtime":1611476972569,"results":"36","hashOfConfig":"21"},{"size":915,"mtime":1611471512130,"results":"37","hashOfConfig":"21"},{"size":1460,"mtime":1611447866964,"results":"38","hashOfConfig":"21"},{"size":602,"mtime":1611444383269,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1tr13u0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js",[],["85","86"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js",["87","88"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx",["89","90","91","92","93"],"import React, { useState, useRef, useEffect } from \"react\";\nimport \"./SignupPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useForm } from \"../../hooks/useForm\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\n\nexport default function SignupPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // Photos have to be sent over using FormData,\n    // they are sent over to the server in multiple requests\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n\n    for (let fieldName in state) {\n      console.log(fieldName, state[fieldName]);\n      // append the rest of the data to the form obejct\n      formData.append(fieldName, state[fieldName]);\n    }\n\n    try {\n      console.log(formData.forEach((item) => console.log(item)));\n\n      // use the userService to make the fetch request\n      await userService.signup(formData);\n\n      // Route to wherever you want!\n      // after you get a response from the server from\n      // the signup request, you need to grab the token from\n      // local storage and set the user!\n      props.handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \"this is e.target.files\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  //key should be password\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            Sign Up\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n              <Form.Field>\n                <span style={{ textAlign: \"left\" }}>\n                  Upload a profile Picture\n                </span>\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileInput}\n                />\n              </Form.Field>\n              <Button type=\"submit\" className=\"btn\" disabled={invalidForm}>\n                Signup\n              </Button>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx",["94","95"],"import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      console.log(state, \"this is state\");\n      console.log(props, \"this is props\");\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignupOrLogin(); //\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <span>Log-in to your account</span>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Button\n                color=\"teal\"\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n                disabled={invalidForm}\n              >\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            New to us? <Link to=\"/signup\">Sign Up</Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js",["96"],"import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\n\n//if you upload a photo, make sure that you delete the headers\n//because you have to send multipart form request\nfunction signup(user) {\n  return (\n    fetch(BASE_URL + \"signup\", {\n      method: \"POST\",\n      body: user,\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        // Probably a duplicate email\n        throw new Error(\"Email already taken!\");\n      })\n      // Parameter destructuring!\n      .then(({ token }) => tokenService.setToken(token))\n  );\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js",["97"],"function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js",["98","99"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js",["100"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js",["101"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js",["102"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\n\n//import \"./PreviewCard.scss\";\n\nconst PreviewCard = ({ name, released, id, image, getGameId }) => {\n  return (\n    <Container>\n      <Link\n        to=\"details/\"\n        onClick={() => {\n          console.log(id, \"this is the id\");\n          getGameId(id);\n        }}\n      >\n        <img src={image} alt={name} />\n        <h3>{name}</h3>\n        <p>Release Date: {released}</p>\n      </Link>\n    </Container>\n  );\n};\n\nexport default PreviewCard;\n\nconst Container = styled.div`\n  img {\n    width: 100%;\n  }\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js",["103","104","105","106"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js",["107","108","109","110"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js",["111","112","113","114"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SimpleSlider from \"../../components/SimpleSlider/SimpleSlider\";\nimport styled, { css } from \"styled-components\";\nconst DetailCard = ({\n  name,\n  rating,\n  description,\n  developers,\n  platforms,\n  screenShots,\n  gameDetails,\n}) => {\n  return (\n    <div>\n      <h3>{name}</h3>\n      <SimpleSlider screenShots={screenShots} />\n      <h5>\n        ESRB rating:{\"  \"}\n        {gameDetails.esrb_rating ? gameDetails.esrb_rating.name : \"N/A\"}\n      </h5>\n      <h5>Score: {rating}</h5>\n      <h5>Developer:</h5>\n      {developers.map((developer) => (\n        <h5>{developer.name}</h5>\n      ))}\n      <p>Platforms:</p>\n      {platforms.map((platform) => (\n        <span key={platform.platform.id}>{platform.platform.name}// </span>\n      ))}\n      <h5>Description</h5>\n      <p>{description}</p>\n    </div>\n  );\n};\n\nexport default DetailCard;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js",["115"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SimpleSlider/SimpleSlider.js",[],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":3,"column":18,"nodeType":"122","messageId":"123","endLine":3,"endColumn":21},{"ruleId":"120","severity":1,"message":"125","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":33},{"ruleId":"120","severity":1,"message":"126","line":1,"column":35,"nodeType":"122","messageId":"123","endLine":1,"endColumn":44},{"ruleId":"120","severity":1,"message":"127","line":4,"column":38,"nodeType":"122","messageId":"123","endLine":4,"endColumn":43},{"ruleId":"120","severity":1,"message":"128","line":5,"column":10,"nodeType":"122","messageId":"123","endLine":5,"endColumn":17},{"ruleId":"120","severity":1,"message":"129","line":10,"column":23,"nodeType":"122","messageId":"123","endLine":10,"endColumn":35},{"ruleId":"120","severity":1,"message":"127","line":11,"column":3,"nodeType":"122","messageId":"123","endLine":11,"endColumn":8},{"ruleId":"120","severity":1,"message":"129","line":17,"column":23,"nodeType":"122","messageId":"123","endLine":17,"endColumn":35},{"ruleId":"130","severity":1,"message":"131","line":47,"column":1,"nodeType":"132","endLine":52,"endColumn":3},{"ruleId":"130","severity":1,"message":"131","line":34,"column":1,"nodeType":"132","endLine":39,"endColumn":3},{"ruleId":"120","severity":1,"message":"133","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"126","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"134","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"135","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":3,"column":18,"nodeType":"122","messageId":"123","endLine":3,"endColumn":21},{"ruleId":"120","severity":1,"message":"124","line":6,"column":18,"nodeType":"122","messageId":"123","endLine":6,"endColumn":21},{"ruleId":"120","severity":1,"message":"136","line":53,"column":7,"nodeType":"122","messageId":"123","endLine":53,"endColumn":12},{"ruleId":"120","severity":1,"message":"137","line":57,"column":7,"nodeType":"122","messageId":"123","endLine":57,"endColumn":14},{"ruleId":"120","severity":1,"message":"138","line":60,"column":7,"nodeType":"122","messageId":"123","endLine":60,"endColumn":14},{"ruleId":"120","severity":1,"message":"139","line":6,"column":10,"nodeType":"122","messageId":"123","endLine":6,"endColumn":16},{"ruleId":"120","severity":1,"message":"140","line":7,"column":17,"nodeType":"122","messageId":"123","endLine":7,"endColumn":23},{"ruleId":"120","severity":1,"message":"135","line":7,"column":25,"nodeType":"122","messageId":"123","endLine":7,"endColumn":29},{"ruleId":"120","severity":1,"message":"141","line":7,"column":31,"nodeType":"122","messageId":"123","endLine":7,"endColumn":40},{"ruleId":"120","severity":1,"message":"142","line":2,"column":10,"nodeType":"122","messageId":"123","endLine":2,"endColumn":18},{"ruleId":"120","severity":1,"message":"121","line":4,"column":8,"nodeType":"122","messageId":"123","endLine":4,"endColumn":14},{"ruleId":"120","severity":1,"message":"124","line":4,"column":18,"nodeType":"122","messageId":"123","endLine":4,"endColumn":21},{"ruleId":"143","severity":1,"message":"144","line":29,"column":66,"nodeType":"145","endLine":29,"endColumn":69},{"ruleId":"146","severity":1,"message":"147","line":32,"column":20,"nodeType":"148","messageId":"149","endLine":32,"endColumn":22},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'css' is defined but never used.","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Image' is defined but never used.","'useForm' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'useState' is defined but never used.","'SidebarCard' is defined but never used.","'Link' is defined but never used.","'Glass' is assigned a value but never used.","'Circle1' is assigned a value but never used.","'Circle2' is assigned a value but never used.","'motion' is defined but never used.","'Switch' is defined but never used.","'useParams' is defined but never used.","'Redirect' is defined but never used.","react/jsx-no-comment-textnodes","Comments inside children section of tag should be placed inside braces","Literal","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]