[{"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js":"1","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js":"2","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js":"3","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx":"4","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx":"5","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js":"6","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js":"7","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx":"8","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js":"9","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js":"10","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js":"11","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js":"12","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js":"13","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js":"14","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js":"15","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js":"16","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js":"17","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js":"18","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SimpleSlider/SimpleSlider.js":"19"},{"size":595,"mtime":1611009851880,"results":"20","hashOfConfig":"21"},{"size":5086,"mtime":1610734296686,"results":"22","hashOfConfig":"21"},{"size":4830,"mtime":1611614357715,"results":"23","hashOfConfig":"21"},{"size":4400,"mtime":1611601529644,"results":"24","hashOfConfig":"21"},{"size":2876,"mtime":1611602705293,"results":"25","hashOfConfig":"21"},{"size":312,"mtime":1610734296683,"results":"26","hashOfConfig":"21"},{"size":1227,"mtime":1611029613161,"results":"27","hashOfConfig":"21"},{"size":132,"mtime":1610734296683,"results":"28","hashOfConfig":"21"},{"size":903,"mtime":1611028474591,"results":"29","hashOfConfig":"21"},{"size":3044,"mtime":1611616266410,"results":"30","hashOfConfig":"21"},{"size":690,"mtime":1611448018417,"results":"31","hashOfConfig":"21"},{"size":1592,"mtime":1611615222342,"results":"32","hashOfConfig":"21"},{"size":242,"mtime":1611447420568,"results":"33","hashOfConfig":"21"},{"size":1227,"mtime":1611540293539,"results":"34","hashOfConfig":"21"},{"size":3177,"mtime":1611604879205,"results":"35","hashOfConfig":"21"},{"size":3645,"mtime":1611605047828,"results":"36","hashOfConfig":"21"},{"size":2104,"mtime":1611534729478,"results":"37","hashOfConfig":"21"},{"size":1826,"mtime":1611551619213,"results":"38","hashOfConfig":"21"},{"size":824,"mtime":1611551074572,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1tr13u0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"42"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"42"},"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/index.js",[],["91","92"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/serviceWorker.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/App/App.js",["93"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/SignupPage/SignupPage.jsx",["94","95","96","97","98","99"],"import React, { useState, useRef, useEffect } from \"react\";\nimport \"./SignupPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useForm } from \"../../hooks/useForm\";\nimport userService from \"../../utils/userService\";\nimport { useHistory } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\n\nexport default function SignupPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(\"\");\n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    // Photos have to be sent over using FormData,\n    // they are sent over to the server in multiple requests\n    const formData = new FormData();\n    formData.append(\"photo\", selectedFile);\n\n    for (let fieldName in state) {\n      console.log(fieldName, state[fieldName]);\n      // append the rest of the data to the form obejct\n      formData.append(fieldName, state[fieldName]);\n    }\n\n    try {\n      console.log(formData.forEach((item) => console.log(item)));\n\n      // use the userService to make the fetch request\n      await userService.signup(formData);\n\n      // Route to wherever you want!\n      // after you get a response from the server from\n      // the signup request, you need to grab the token from\n      // local storage and set the user!\n      props.handleSignupOrLogin();\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \"this is e.target.files\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n  //key should be password\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n            <h1 style={{ fontSize: 36, color: \"white\" }}>Sign Up</h1>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                name=\"username\"\n                placeholder=\"username\"\n                value={state.username}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"passwordConf\"\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                value={state.passwordConf}\n                onChange={handleChange}\n                required\n              />\n              <Form.Field>\n                <h3 style={{ color: \"#0c54f7\" }}>Upload a profile picture</h3>\n                <Form.Input\n                  type=\"file\"\n                  name=\"photo\"\n                  placeholder=\"upload image\"\n                  onChange={handleFileInput}\n                />\n              </Form.Field>\n              <StyledButton\n                type=\"submit\"\n                className=\"btn\"\n                disabled={invalidForm}\n              >\n                <span>Log-in to your account</span>\n              </StyledButton>\n            </Segment>\n            {error ? <ErrorMessage error={error} /> : null}\n          </Form>\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n\nconst StyledButton = styled.button`\n  background: linear-gradient(45deg, #0cedd7, #0c54f7);\n  color: white;\n  font-size: 1.25em;\n  margin: 1em;\n  padding: 0.5em 1.5em;\n  border: 2px solid white;\n  border-radius: 4px;\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/LoginPage/LoginPage.jsx",["100","101","102"],"import React, { useState } from \"react\";\n\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Grid, Header, Image, Message, Segment } from \"semantic-ui-react\";\nimport styled, { css } from \"styled-components\";\n\nexport default function LoginPage(props) {\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      console.log(state, \"this is state\");\n      console.log(props, \"this is props\");\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignupOrLogin(); //\n      history.push(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return (\n    <>\n      <Grid\n        textAlign=\"center\"\n        style={{ height: \"100vh\" }}\n        verticalAlign=\"middle\"\n      >\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as=\"h2\" textAlign=\"center\">\n            <h1 style={{ color: \"white\" }}>Log-in to your account</h1>\n          </Header>\n          <Form autoComplete=\"off\" onSubmit={handleSubmit}>\n            <Segment stacked>\n              <Form.Input\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"email\"\n                value={state.email}\n                onChange={handleChange}\n                required\n              />\n              <Form.Input\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"password\"\n                value={state.password}\n                onChange={handleChange}\n                required\n              />\n              <StyledButton\n                fluid\n                size=\"large\"\n                type=\"submit\"\n                className=\"btn\"\n                disabled={invalidForm}\n              >\n                <span>Log-in</span>\n              </StyledButton>\n            </Segment>\n          </Form>\n          <Message>\n            <span style={{ color: \"#0C59F6\" }}>New to us?</span>{\" \"}\n            <Link to=\"/signup\">\n              <span style={{ color: \"#0cedd7\" }}>Sign Up</span>\n            </Link>\n          </Message>\n          {error ? <ErrorMessage error={error} /> : null}\n        </Grid.Column>\n      </Grid>\n    </>\n  );\n}\n\nconst StyledButton = styled.button`\n  background: linear-gradient(45deg, #0cedd7, #0c54f7);\n  color: white;\n  font-size: 1.25em;\n  margin: 1em;\n  padding: 0.5em 1.5em;\n  border: 2px solid white;\n  border-radius: 4px;\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/hooks/useForm.js",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/userService.js",["103"],"import tokenService from \"./tokenService\";\n\nconst BASE_URL = \"/api/users/\";\n\n//if you upload a photo, make sure that you delete the headers\n//because you have to send multipart form request\nfunction signup(user) {\n  return (\n    fetch(BASE_URL + \"signup\", {\n      method: \"POST\",\n      body: user,\n    })\n      .then((res) => {\n        if (res.ok) return res.json();\n        // Probably a duplicate email\n        throw new Error(\"Email already taken!\");\n      })\n      // Parameter destructuring!\n      .then(({ token }) => tokenService.setToken(token))\n  );\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + \"login\", {\n    method: \"POST\",\n    headers: new Headers({ \"Content-Type\": \"application/json\" }),\n    body: JSON.stringify(creds),\n  })\n    .then((res) => {\n      // Valid login if we have a status of 2xx (res.ok)\n      if (res.ok) return res.json();\n      throw new Error(\"Bad Credentials!\");\n    })\n    .then(({ token }) => tokenService.setToken(token));\n}\n\nexport default {\n  signup,\n  getUser,\n  logout,\n  login,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/ErrorMessage/ErrorMessage.jsx",[],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/tokenService.js",["104"],"function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem(\"token\", token);\n  } else {\n    localStorage.removeItem(\"token\");\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem(\"token\");\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split(\".\")[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem(\"token\");\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split(\".\")[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem(\"token\");\n}\n\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken,\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Header/Header.js",["105"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Sidebar/Sidebar.js",["106"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SidebarCard from \"../../components/SidebarCard/SidebarCard\";\n\nconst Sidebar = ({ resetGameData }) => {\n  return (\n    <>\n      <Link\n        onClick={() => {\n          resetGameData();\n        }}\n        to=\"/\"\n      >\n        <div>POPULAR GAMES</div>\n      </Link>\n      <Link\n        onClick={() => {\n          resetGameData();\n        }}\n        to=\"/newgames\"\n      >\n        <div>NEW GAMES</div>\n      </Link>\n      <Link\n        onClick={() => {\n          resetGameData();\n        }}\n        to=\"/upcominggames\"\n      >\n        <div>UPCOMING GAMES</div>\n      </Link>\n    </>\n  );\n};\n\nexport default Sidebar;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Searchbar/Searchbar.js",["107","108"],"/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SidebarCard/SidebarCard.js",["109"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst SidebarCard = ({ resetGameData }) => {\n  return (\n    <>\n      <div className=\"SidebarCard\">this is the SidebarCard</div>\n    </>\n  );\n};\n\nexport default SidebarCard;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/PreviewCard/PreviewCard.js",["110"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled, { css } from \"styled-components\";\nimport { smallImage } from \"../../utils/gameService\";\n\n//import \"./PreviewCard.scss\";\n\nconst PreviewCard = ({ name, released, id, image, getGameId }) => {\n  return (\n    <Container>\n      <Link\n        to=\"details/\"\n        onClick={() => {\n          console.log(id, \"this is the id\");\n          getGameId(id);\n        }}\n      >\n        <Title>{name}</Title>\n        <p>Release Date: {released}</p>\n        <img src={smallImage(image, 640)} alt={name} />\n      </Link>\n    </Container>\n  );\n};\n\nexport default PreviewCard;\n\nconst Container = styled.div`\n  min-height: 20vh;\n\n  background: white;\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.75),\n    rgba(255, 255, 255, 0.15)\n  );\n  img {\n    width: 95%;\n    border-radius: 2rem 2rem 3rem 3rem;\n    padding: 0rem 0rem 1.5rem 0rem;\n  }\n  border-radius: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4.5px);\n  -webkit-backdrop-filter: blur(4.5px);\n`;\n\nconst Title = styled.div`\n  color: #0c59f6;\n  padding: 2rem 0rem 1rem;\n  font-size: 2rem;\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/pages/Home/Home.js",["111","112"],"import React from \"react\";\nimport Sidebar from \"../../components/Sidebar/Sidebar\";\nimport Feed from \"../../components/Feed/Feed\";\nimport { Redirect } from \"react-router-dom\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst Home = ({\n  user,\n  handleSubmit,\n  popularData,\n  gameData,\n  newGamesData,\n  upcomingData,\n  resetGameData,\n  getGameId,\n  gameDetails,\n  gameId,\n  screenShots,\n}) => {\n  return (\n    <>\n      {!user ? (\n        <Redirect to=\"/login\" />\n      ) : (\n        <>\n          <Spin1>\n            <CircleWhite></CircleWhite>\n          </Spin1>\n          <Spin2>\n            <CircleColor></CircleColor>\n          </Spin2>\n          <Spin3>\n            <CircleWhite></CircleWhite>\n          </Spin3>\n          <Spin4>\n            <CircleColor></CircleColor>\n          </Spin4>\n          <Spin5>\n            <CircleWhite></CircleWhite>\n          </Spin5>\n          <Spin6>\n            <CircleColor></CircleColor>\n          </Spin6>\n          <Feed\n            handleSubmit={handleSubmit}\n            popularData={popularData}\n            gameData={gameData}\n            newGamesData={newGamesData}\n            upcomingData={upcomingData}\n            getGameId={getGameId}\n            gameDetails={gameDetails}\n            gameId={gameId}\n            screenShots={screenShots}\n          />\n        </>\n      )}\n    </>\n  );\n};\n\nconst CircleWhite = styled.div`\n  z-index: 0;\n  border-radius: 50%;\n  background: white;\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.8),\n    rgba(255, 255, 255, 0.1)\n  );\n  height: 40rem;\n  width: 40rem;\n`;\nconst CircleColor = styled.div`\n  z-index: 0;\n  border-radius: 50%;\n  background: white;\n  background: linear-gradient(\n    to right bottom,\n    rgba(10, 16, 248, 0.8),\n    rgba(10, 248, 229, 0.1)\n  );\n  height: 10rem;\n  width: 10rem;\n`;\n\nconst Spin = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n\n  to {\n    transform: rotate(360deg);\n  }\n`;\n\nconst Spin1 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  top: 65%;\n  left: 5%;\n`;\n\nconst Spin2 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  top: 65%;\n  left: 5%;\n`;\nconst Spin3 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  top: 5%;\n  right: 5%;\n`;\nconst Spin4 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  top: 5%;\n  right: 25%;\n`;\nconst Spin5 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  top: 90%;\n  right: 5%;\n`;\n\nconst Spin6 = styled.div`\n  z-index: 0;\n  display: inline-block;\n  animation: ${Spin} 10s linear infinite;\n  padding: 2rem 1rem;\n  font-size: 1.2rem;\n  position: absolute;\n  bottom: 2%;\n  right: 7%;\n`;\n\nexport default Home;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/Feed/Feed.js",["113","114","115","116"],"import React from \"react\";\nimport Searchbar from \"../../components/Searchbar/Searchbar\";\nimport PreviewCard from \"../../components/PreviewCard/PreviewCard\";\nimport DetailCard from \"../DetailCard/DetailCard\";\nimport styled from \"styled-components\";\nimport { motion } from \"framer-motion\";\nimport { Route, Switch, Link, useParams } from \"react-router-dom\";\n\nconst Feed = ({\n  handleSubmit,\n  popularData,\n  gameData,\n  newGamesData,\n  upcomingData,\n  getGameId,\n  gameDetails,\n  gameId,\n  screenShots,\n}) => {\n  console.log(popularData.results[0].id, \"this is popular data index 0 id\");\n  return (\n    <>\n      <Route path=\"/\">\n        <Searchbar handleSubmit={handleSubmit} style={{ zIndex: 5 }} />\n      </Route>\n      {gameData ? (\n        <Route exact path=\"/searchfeed\">\n          <Container>\n            <h1>RESULTS</h1>\n            <Grid>\n              {gameData.results.map((game, i) => (\n                <PreviewCard\n                  key={i}\n                  name={game.name}\n                  released={game.released}\n                  id={game.id}\n                  image={game.background_image}\n                  getGameId={getGameId}\n                />\n              ))}\n            </Grid>\n          </Container>\n        </Route>\n      ) : (\n        <Route exact path=\"/searchfeed\">\n          \"Loading\"\n        </Route>\n      )}\n      <Route exact path=\"/newgames\">\n        <Container>\n          <h1>NEW GAMES</h1>\n          <Grid>\n            {newGamesData.results.map((game, i) => (\n              <PreviewCard\n                key={i}\n                name={game.name}\n                released={game.released}\n                id={game.id}\n                image={game.background_image}\n                getGameId={getGameId}\n              />\n            ))}\n          </Grid>\n        </Container>\n      </Route>\n      <Route exact path=\"/\">\n        <Container>\n          <h1>POPULAR GAMES</h1>\n          <Grid>\n            {popularData.results.map((game, i) => (\n              <PreviewCard\n                key={i}\n                name={game.name}\n                released={game.released}\n                id={game.id}\n                image={game.background_image}\n                getGameId={getGameId}\n              />\n            ))}\n          </Grid>\n        </Container>\n      </Route>\n      <Route exact path=\"/upcominggames\">\n        <Container>\n          <h1>UPCOMING GAMES</h1>\n          <Grid>\n            {upcomingData.results.map((game, i) => (\n              <PreviewCard\n                key={i}\n                name={game.name}\n                released={game.released}\n                id={game.id}\n                image={game.background_image}\n                getGameId={getGameId}\n              />\n            ))}\n          </Grid>\n        </Container>\n      </Route>\n      <Route exact path=\"/details\">\n        {gameDetails && screenShots ? (\n          <DetailCard\n            gameDetails={gameDetails}\n            key={gameDetails.id}\n            name={gameDetails.name}\n            rating={gameDetails.rating}\n            description={gameDetails.description_raw}\n            developers={gameDetails.developers}\n            platforms={gameDetails.platforms}\n            screenShots={screenShots}\n          />\n        ) : (\n          \"Loading....\"\n        )}\n      </Route>\n    </>\n  );\n};\n\nexport default Feed;\n\nconst Container = styled.div`\n  padding: 0rem 5rem;\n  h1 {\n    padding: 4rem 5rem;\n    color: #fffafa;\n    font-size: 5rem;\n  }\n`;\n\nconst Grid = styled.div`\n  min-height: 80vh;\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  grid-column-gap: 3rem;\n  grid-row-gap: 5rem;\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/DetailCard/DetailCard.js",["117","118"],"import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport SimpleSlider from \"../../components/SimpleSlider/SimpleSlider\";\nimport styled, { css } from \"styled-components\";\n\nconst DetailCard = ({\n  name,\n  rating,\n  description,\n  developers,\n  platforms,\n  screenShots,\n  gameDetails,\n}) => {\n  return (\n    <>\n      <FlexBox>\n        <ImageContainer>\n          {screenShots ? (\n            <SimpleSlider\n              style={{ padding: \"5rem\" }}\n              screenShots={screenShots}\n            />\n          ) : (\n            \"Loading\"\n          )}\n        </ImageContainer>\n      </FlexBox>\n      <Container>\n        <h3>{name}</h3>\n        <h5>\n          ESRB rating:{\"  \"}\n          {gameDetails.esrb_rating ? gameDetails.esrb_rating.name : \"N/A\"}\n        </h5>\n        <h5>Score: {rating}</h5>\n        <h5>Developer:</h5>\n        {developers.map((developer) => (\n          <p>{developer.name}</p>\n        ))}\n        <h5>Platforms:</h5>\n        {platforms.map((platform) => (\n          <p key={platform.platform.id}>{platform.platform.name} </p>\n        ))}\n        <h5>Description</h5>\n        <p>{description}</p>\n      </Container>\n    </>\n  );\n};\n\nexport default DetailCard;\n\nconst Container = styled.div`\n  margin: 5rem;\n  background: white;\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.75),\n    rgba(255, 255, 255, 0.3)\n  );\n  border-radius: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4.5px);\n  -webkit-backdrop-filter: blur(4.5px);\n`;\n\nconst ImageContainer = styled.div`\n  margin: 5rem 0rem 0.1rem 0rem;\n  padding: 3rem;\n  max-width: 87vh;\n  background: white;\n  background: linear-gradient(\n    to right bottom,\n    rgba(255, 255, 255, 0.75),\n    rgba(255, 255, 255, 0.3)\n  );\n  border-radius: 2rem;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(4.5px);\n  -webkit-backdrop-filter: blur(4.5px);\n`;\nconst FlexBox = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/utils/gameService.js",["119"],"const BASE_URL = \"https://api.rawg.io/api/\";\n\n//getting the date\nconst getCurrentMonth = () => {\n  const month = new Date().getMonth() + 1;\n  if (month < 10) {\n    return `0${month}`;\n  } else {\n    return month;\n  }\n};\n\nconst getCurrentDay = () => {\n  const day = new Date().getDate();\n  if (day < 10) {\n    return `0${day}`;\n  } else {\n    return day;\n  }\n};\n\nconst currentYear = new Date().getFullYear();\nconst currentMonth = getCurrentMonth();\n\nconst currentDay = getCurrentDay();\nconst lastYear = `${currentYear - 1}-${currentMonth}-${currentDay}`;\nconst nextYear = `${currentYear + 1}-${currentMonth}-${currentDay}`;\nconst currentDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\nconst getLastMonth = () => {\n  let lastMonth;\n  if (currentMonth == \"01\") {\n    lastMonth = `${currentYear - 1}-${11}-${currentDay}`;\n  } else {\n    lastMonth = `${currentYear}-${currentMonth - 1}-${currentDay}`;\n  }\n  return lastMonth;\n};\n\nconst lastMonth = getLastMonth();\n\n//popular games\n\nconst POPULAR_GAMES = `games?dates=${lastYear},${currentDate}&ordering=-rating&page_size=12`;\nconst UPCOMING_GAMES = `games?dates=${currentDate},${nextYear}&ordering=-added&page_size=12`;\nconst NEW_GAMES = `games?dates=${lastMonth},${currentDate}&ordering=-rating&page_size=12`;\n\nexport const popularGamesURL = () => `${BASE_URL}${POPULAR_GAMES}`;\nexport const upcomingGamesURL = () => `${BASE_URL}${UPCOMING_GAMES}`;\nexport const newGamesURL = () => `${BASE_URL}${NEW_GAMES}`;\n\nexport const smallImage = (imagePath, size) => {\n  if (imagePath) {\n    const image = imagePath.match(/media\\/screenshots/)\n      ? imagePath.replace(\n          \"media/screenshots\",\n          `media/resize/${size}/-/screenshots`\n        )\n      : imagePath.replace(\"/media/games/\", `/media/resize/${size}/-/games/`);\n    return image;\n  }\n  return imagePath;\n};\n","/Users/jeremydurden/code/mern-boilerplate-from-jim/project4/src/components/SimpleSlider/SimpleSlider.js",["120"],"import React from \"react\";\nimport Slider, { dots } from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { smallImage } from \"../../utils/gameService\";\n\nexport default function SimpleSlider({ screenShots }) {\n  var settings = {\n    dots: true,\n    fade: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    cssEase: \"linear\",\n    adaptiveHeight: true,\n  };\n  return (\n    <>\n      {screenShots ? (\n        <Slider {...settings}>\n          {screenShots.results.map((picture) => (\n            <img\n              key={picture.id}\n              src={smallImage(picture.image, 1280)}\n              alt=\"screen shot\"\n            />\n          ))}\n        </Slider>\n      ) : (\n        <span>Loading...</span>\n      )}\n    </>\n  );\n}\n",{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","severity":1,"message":"126","line":21,"column":10,"nodeType":"127","messageId":"128","endLine":21,"endColumn":17},{"ruleId":"125","severity":1,"message":"129","line":1,"column":27,"nodeType":"127","messageId":"128","endLine":1,"endColumn":33},{"ruleId":"125","severity":1,"message":"130","line":1,"column":35,"nodeType":"127","messageId":"128","endLine":1,"endColumn":44},{"ruleId":"125","severity":1,"message":"131","line":4,"column":30,"nodeType":"127","messageId":"128","endLine":4,"endColumn":35},{"ruleId":"125","severity":1,"message":"132","line":5,"column":10,"nodeType":"127","messageId":"128","endLine":5,"endColumn":17},{"ruleId":"125","severity":1,"message":"133","line":8,"column":18,"nodeType":"127","messageId":"128","endLine":8,"endColumn":21},{"ruleId":"125","severity":1,"message":"134","line":11,"column":23,"nodeType":"127","messageId":"128","endLine":11,"endColumn":35},{"ruleId":"125","severity":1,"message":"131","line":6,"column":30,"nodeType":"127","messageId":"128","endLine":6,"endColumn":35},{"ruleId":"125","severity":1,"message":"133","line":7,"column":18,"nodeType":"127","messageId":"128","endLine":7,"endColumn":21},{"ruleId":"125","severity":1,"message":"134","line":10,"column":23,"nodeType":"127","messageId":"128","endLine":10,"endColumn":35},{"ruleId":"135","severity":1,"message":"136","line":47,"column":1,"nodeType":"137","endLine":52,"endColumn":3},{"ruleId":"135","severity":1,"message":"136","line":34,"column":1,"nodeType":"137","endLine":39,"endColumn":3},{"ruleId":"125","severity":1,"message":"133","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"125","severity":1,"message":"138","line":3,"column":8,"nodeType":"127","messageId":"128","endLine":3,"endColumn":19},{"ruleId":"125","severity":1,"message":"139","line":2,"column":22,"nodeType":"127","messageId":"128","endLine":2,"endColumn":26},{"ruleId":"125","severity":1,"message":"133","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"125","severity":1,"message":"139","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":14},{"ruleId":"125","severity":1,"message":"133","line":3,"column":18,"nodeType":"127","messageId":"128","endLine":3,"endColumn":21},{"ruleId":"125","severity":1,"message":"140","line":2,"column":8,"nodeType":"127","messageId":"128","endLine":2,"endColumn":15},{"ruleId":"125","severity":1,"message":"133","line":5,"column":18,"nodeType":"127","messageId":"128","endLine":5,"endColumn":21},{"ruleId":"125","severity":1,"message":"141","line":6,"column":10,"nodeType":"127","messageId":"128","endLine":6,"endColumn":16},{"ruleId":"125","severity":1,"message":"142","line":7,"column":17,"nodeType":"127","messageId":"128","endLine":7,"endColumn":23},{"ruleId":"125","severity":1,"message":"139","line":7,"column":25,"nodeType":"127","messageId":"128","endLine":7,"endColumn":29},{"ruleId":"125","severity":1,"message":"143","line":7,"column":31,"nodeType":"127","messageId":"128","endLine":7,"endColumn":40},{"ruleId":"125","severity":1,"message":"144","line":2,"column":10,"nodeType":"127","messageId":"128","endLine":2,"endColumn":18},{"ruleId":"125","severity":1,"message":"133","line":4,"column":18,"nodeType":"127","messageId":"128","endLine":4,"endColumn":21},{"ruleId":"145","severity":1,"message":"146","line":32,"column":20,"nodeType":"147","messageId":"148","endLine":32,"endColumn":22},{"ruleId":"125","severity":1,"message":"149","line":2,"column":18,"nodeType":"127","messageId":"128","endLine":2,"endColumn":22},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"no-unused-vars","'library' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'Image' is defined but never used.","'useForm' is defined but never used.","'css' is defined but never used.","'setValidForm' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'SidebarCard' is defined but never used.","'Link' is defined but never used.","'Sidebar' is defined but never used.","'motion' is defined but never used.","'Switch' is defined but never used.","'useParams' is defined but never used.","'Redirect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'dots' is defined but never used.","no-global-assign","no-unsafe-negation"]